"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ENGINE_UPDATE_PRESETS = void 0;
const common_all_1 = require("@dendronhq/common-all");
const lodash_1 = __importDefault(require("lodash"));
const utilsv2_1 = require("../../utilsv2");
const notes_1 = require("../notes");
const NOTES = {
    NOTE_NO_CHILDREN: new utilsv2_1.TestPresetEntryV4(async ({ vaults, engine }) => {
        const noteOld = common_all_1.NoteUtilsV2.getNoteByFnameV4({
            fname: "foo",
            notes: engine.notes,
            vault: vaults[0],
        });
        const cnote = lodash_1.default.clone(noteOld);
        cnote.body = "new body";
        await engine.updateNote(cnote);
        const noteNew = common_all_1.NoteUtilsV2.getNoteByFnameV4({
            fname: "foo",
            notes: engine.notes,
            vault: vaults[0],
        });
        return [
            {
                actual: lodash_1.default.trim(noteOld.body),
                expected: "foo body",
            },
            {
                actual: lodash_1.default.trim(noteNew.body),
                expected: "new body",
            },
        ];
    }, {
        preSetupHook: async ({ vaults, wsRoot }) => {
            await notes_1.NOTE_PRESETS_V4.NOTE_SIMPLE.create({ wsRoot, vault: vaults[0] });
        },
    }),
};
exports.ENGINE_UPDATE_PRESETS = {
    NOTES,
};
//# sourceMappingURL=update.js.map