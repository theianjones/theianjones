import { ENGINE_CONFIG_PRESETS } from "./config";
import { ENGINE_QUERY_PRESETS } from "./query";
import { ENGINE_RENAME_PRESETS } from "./rename";
export { ENGINE_HOOKS, ENGINE_HOOKS_MULTI } from "./utils";
import { ENGINE_WRITE_PRESETS } from "./write";
export declare const ENGINE_SERVER: {
    NOTE_REF: {
        WILDCARD_LINK: import("../..").TestPresetEntry<{
            vaults: import("@dendronhq/common-all").DVault[];
        }, unknown, {
            body: string;
        }>;
        WILDCARD_LINK_V4: import("../..").TestPresetEntryV4;
    };
    ENGINE_WRITE_PRESETS: {
        NOTES: {
            SERIALIZE_CHILD_WITH_HIERARCHY: import("../..").TestPresetEntryV4;
            CUSTOM_ATT: import("../..").TestPresetEntryV4;
            CUSTOM_ATT_ADD: import("../..").TestPresetEntryV4;
            NEW_DOMAIN: import("../..").TestPresetEntryV4;
            MATCH_SCHEMA: import("../..").TestPresetEntryV4;
            DOMAIN_STUB: import("../..").TestPresetEntryV4;
            GRANDCHILD_OF_ROOT_AND_CHILD_IS_STUB: import("../..").TestPresetEntryV4;
            CHILD_OF_DOMAIN: import("../..").TestPresetEntryV4;
            GRANDCHILD_OF_DOMAIN_AND_CHILD_IS_STUB: import("../..").TestPresetEntryV4;
            TITLE_MATCHES_TITLE_CASE: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {
            ADD_NEW_SCHEMA: import("../..").TestPresetEntryV4;
            ADD_NEW_MODULE_NO_CHILD: import("../..").TestPresetEntryV4;
            ADD_NEW_MODULE: import("../..").TestPresetEntryV4;
        };
    };
    ENGINE_INIT_PRESETS: {
        NOTES: {
            DOMAIN_STUB: import("../..").TestPresetEntryV4;
            NOTE_WITH_CUSTOM_ATT: import("../..").TestPresetEntryV4;
            BAD_PARSE: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {
            BASICS: import("../..").TestPresetEntryV4;
            BAD_SCHEMA: import("../..").TestPresetEntryV4;
        };
    };
    ENGINE_UPDATE_PRESETS: {
        NOTES: {
            NOTE_NO_CHILDREN: import("../..").TestPresetEntryV4;
        };
    };
    ENGINE_DELETE_PRESETS: {
        NOTES: {
            NOTE_NO_CHILDREN: import("../..").TestPresetEntryV4;
            DOMAIN_CHILDREN: import("../..").TestPresetEntryV4;
            DOMAIN_NO_CHILDREN: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {
            BASIC: import("../..").TestPresetEntryV4;
        };
    };
    ENGINE_GET_NOTE_BY_PATH_PRESETS: {
        NOTES: {
            ROOT: import("../..").TestPresetEntryV4;
            EXISTING_NOTE: import("../..").TestPresetEntryV4;
            NOTE_WITH_CAPS_AND_SPACES: import("../..").TestPresetEntryV4;
            NEW_NOTE: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {};
    };
    ENGINE_RENAME_PRESETS: {
        NOTES: {
            NOTE_REF: import("../..").TestPresetEntryV4;
            DOMAIN_NO_CHILDREN: import("../..").TestPresetEntryV4;
            DOMAIN_DIFF_TITLE: import("../..").TestPresetEntryV4;
            LINK_AT_ROOT: import("../..").TestPresetEntryV4;
            TARGET_IN_VAULT1_AND_LINK_IN_VAULT2: import("../..").TestPresetEntryV4;
            TARGET_IN_VAULT2_AND_LINK_IN_VAULT2: import("../..").TestPresetEntryV4;
            TARGET_IN_VAULT2_AND_LINK_IN_VAULT1: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {};
    };
    ENGINE_QUERY_PRESETS: {
        NOTES: {
            EMPTY_QS: import("../..").TestPresetEntryV4;
            STAR_QUERY: import("../..").TestPresetEntryV4;
            DOMAIN_QUERY_WITH_SCHEMA: import("../..").TestPresetEntryV4;
            CHILD_QUERY_WITH_SCHEMA: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {
            EMPTY_QS: import("../..").TestPresetEntryV4;
            STAR_QUERY: import("../..").TestPresetEntryV4;
            SIMPLE: import("../..").TestPresetEntryV4;
        };
    };
};
export declare const ENGINE_PRESETS: ({
    name: string;
    presets: {
        NOTES: {
            DOMAIN_STUB: import("../..").TestPresetEntryV4;
            NOTE_WITH_CUSTOM_ATT: import("../..").TestPresetEntryV4;
            BAD_PARSE: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {
            BASICS: import("../..").TestPresetEntryV4;
            BAD_SCHEMA: import("../..").TestPresetEntryV4;
        };
    };
} | {
    name: string;
    presets: {
        NOTES: {
            ROOT: import("../..").TestPresetEntryV4;
            EXISTING_NOTE: import("../..").TestPresetEntryV4;
            NOTE_WITH_CAPS_AND_SPACES: import("../..").TestPresetEntryV4;
            NEW_NOTE: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {};
    };
} | {
    name: string;
    presets: {
        NOTES: {
            EMPTY_QS: import("../..").TestPresetEntryV4;
            STAR_QUERY: import("../..").TestPresetEntryV4;
            DOMAIN_QUERY_WITH_SCHEMA: import("../..").TestPresetEntryV4;
            CHILD_QUERY_WITH_SCHEMA: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {
            EMPTY_QS: import("../..").TestPresetEntryV4;
            STAR_QUERY: import("../..").TestPresetEntryV4;
            SIMPLE: import("../..").TestPresetEntryV4;
        };
    };
} | {
    name: string;
    presets: {
        NOTES: {
            NOTE_REF: import("../..").TestPresetEntryV4;
            DOMAIN_NO_CHILDREN: import("../..").TestPresetEntryV4;
            DOMAIN_DIFF_TITLE: import("../..").TestPresetEntryV4;
            LINK_AT_ROOT: import("../..").TestPresetEntryV4;
            TARGET_IN_VAULT1_AND_LINK_IN_VAULT2: import("../..").TestPresetEntryV4;
            TARGET_IN_VAULT2_AND_LINK_IN_VAULT2: import("../..").TestPresetEntryV4;
            TARGET_IN_VAULT2_AND_LINK_IN_VAULT1: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {};
    };
} | {
    name: string;
    presets: {
        NOTES: {
            NOTE_NO_CHILDREN: import("../..").TestPresetEntryV4;
        };
    };
} | {
    name: string;
    presets: {
        NOTES: {
            SERIALIZE_CHILD_WITH_HIERARCHY: import("../..").TestPresetEntryV4;
            CUSTOM_ATT: import("../..").TestPresetEntryV4;
            CUSTOM_ATT_ADD: import("../..").TestPresetEntryV4;
            NEW_DOMAIN: import("../..").TestPresetEntryV4;
            MATCH_SCHEMA: import("../..").TestPresetEntryV4;
            DOMAIN_STUB: import("../..").TestPresetEntryV4;
            GRANDCHILD_OF_ROOT_AND_CHILD_IS_STUB: import("../..").TestPresetEntryV4;
            CHILD_OF_DOMAIN: import("../..").TestPresetEntryV4;
            GRANDCHILD_OF_DOMAIN_AND_CHILD_IS_STUB: import("../..").TestPresetEntryV4;
            TITLE_MATCHES_TITLE_CASE: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {
            ADD_NEW_SCHEMA: import("../..").TestPresetEntryV4;
            ADD_NEW_MODULE_NO_CHILD: import("../..").TestPresetEntryV4;
            ADD_NEW_MODULE: import("../..").TestPresetEntryV4;
        };
    };
})[];
export declare const ENGINE_PRESETS_MULTI: ({
    name: string;
    presets: {
        NOTES: {
            DOMAIN_STUB: import("../..").TestPresetEntryV4;
            NOTE_WITH_CUSTOM_ATT: import("../..").TestPresetEntryV4;
            BAD_PARSE: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {
            BASICS: import("../..").TestPresetEntryV4;
            BAD_SCHEMA: import("../..").TestPresetEntryV4;
        };
    };
} | {
    name: string;
    presets: {
        NOTES: {
            ROOT: import("../..").TestPresetEntryV4;
            EXISTING_NOTE: import("../..").TestPresetEntryV4;
            NOTE_WITH_CAPS_AND_SPACES: import("../..").TestPresetEntryV4;
            NEW_NOTE: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {};
    };
} | {
    name: string;
    presets: {
        NOTES: {
            EMPTY_QS: import("../..").TestPresetEntryV4;
            STAR_QUERY: import("../..").TestPresetEntryV4;
            DOMAIN_QUERY_WITH_SCHEMA: import("../..").TestPresetEntryV4;
            CHILD_QUERY_WITH_SCHEMA: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {
            EMPTY_QS: import("../..").TestPresetEntryV4;
            STAR_QUERY: import("../..").TestPresetEntryV4;
            SIMPLE: import("../..").TestPresetEntryV4;
        };
    };
} | {
    name: string;
    presets: {
        NOTES: {
            NOTE_REF: import("../..").TestPresetEntryV4;
            DOMAIN_NO_CHILDREN: import("../..").TestPresetEntryV4;
            DOMAIN_DIFF_TITLE: import("../..").TestPresetEntryV4;
            LINK_AT_ROOT: import("../..").TestPresetEntryV4;
            TARGET_IN_VAULT1_AND_LINK_IN_VAULT2: import("../..").TestPresetEntryV4;
            TARGET_IN_VAULT2_AND_LINK_IN_VAULT2: import("../..").TestPresetEntryV4;
            TARGET_IN_VAULT2_AND_LINK_IN_VAULT1: import("../..").TestPresetEntryV4;
        };
        SCHEMAS: {};
    };
} | {
    name: string;
    presets: {
        NOTES: {
            NOTE_NO_CHILDREN: import("../..").TestPresetEntryV4;
        };
    };
} | {
    name: string;
    presets: {
        NOTES: {
            NEW_DOMAIN: import("../..").TestPresetEntryV4;
            NEW_DOMAIN_WITH_FULL_PATH_VAULT: import("../..").TestPresetEntryV4;
        };
    };
})[];
export { ENGINE_RENAME_PRESETS };
export { ENGINE_QUERY_PRESETS };
export { ENGINE_WRITE_PRESETS };
export { ENGINE_CONFIG_PRESETS };
