import { DLink, DNoteLink, DNoteLoc, NotePropsV2 } from "@dendronhq/common-all";
import { Heading } from "mdast";
import remark from "remark";
import { ReplaceLinkOpts } from "../../types";
import { DendronLinksOpts } from "./plugins/dendronLinksPlugin";
import { dendronNoteRefPluginForMd } from "./plugins/dendronNoteRefPlugin";
export declare const WIKI_LINK_VALUE_RE: RegExp;
export declare class ParserUtilsV2 {
    static createWikiLinkRE(opts?: {
        oldLink: string;
    }): string;
    /**
     * - parse frontmatter
     * - parse wiki links
     * @param opts
     */
    static getRemark(opts?: {
        dendronLinksOpts: DendronLinksOpts;
        dendronNoteRefPluginForMdOpts?: Parameters<typeof dendronNoteRefPluginForMd>[0];
        useDendronNoteRefPluginForMd?: boolean;
    }): import("unified").Processor<remark.PartialRemarkOptions>;
    static findHeaders(content: string): Heading[];
    /**
     * Get all links from the note body
     * Currently, just look for wiki links
     * @param param0
     */
    static findLinks({ note }: {
        note: NotePropsV2;
    }): DLink[];
    static escapeForRegExp(value: string): string;
    static genMDError(opts: {
        msg: string;
        title: string;
    }): import("unist").Parent;
    static replaceLinks(opts: {
        content: string;
        from: DNoteLoc;
        to: DNoteLoc;
    }): Promise<string>;
}
export declare class RemarkUtilsV2 {
    static replaceLink({ link, opts, }: {
        link: DNoteLink;
        opts: ReplaceLinkOpts;
    }): DNoteLink<any>;
}
