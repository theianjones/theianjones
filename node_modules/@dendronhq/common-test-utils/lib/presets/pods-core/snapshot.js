"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
const __1 = require("../..");
const utils_1 = require("../../utils");
const EXPORT_DEFAULTS = new utils_1.TestPresetEntry({
    label: "with defaults",
    before: async ({ vaultDir }) => {
        await __1.NodeTestPresetsV2.createOneNoteOneSchemaPresetWithBody({
            vaultDir,
        });
    },
    results: async ({ wsRoot, snapshotDirPath, }) => {
        let defaultSnapshotRootPath = path_1.default.join(wsRoot, "snapshots");
        const vaultPath = path_1.default.join(snapshotDirPath, "vault");
        const snapshotVault = fs_extra_1.default.readdirSync(vaultPath);
        const assetsDir = fs_extra_1.default.readdirSync(path_1.default.join(vaultPath, "assets"));
        const scenarios = [
            {
                actual: path_1.default.dirname(snapshotDirPath),
                expected: defaultSnapshotRootPath,
            },
            {
                actual: snapshotVault.length,
                expected: 6,
            },
            {
                actual: assetsDir,
                expected: ["foo.jpg"],
            },
        ];
        return scenarios;
    },
});
const IMPORT_BASIC = new utils_1.TestPresetEntry({
    label: "with defaults",
    before: async ({ vaultDir }) => {
        await __1.NodeTestPresetsV2.createOneNoteOneSchemaPresetWithBody({
            vaultDir,
        });
    },
    results: async ({ vaultDirPath }) => {
        const vaultDir = fs_extra_1.default.readdirSync(vaultDirPath);
        expect(vaultDir.length).toEqual(7);
        // copy assets
        const assetsDir = fs_extra_1.default.readdirSync(path_1.default.join(vaultDirPath, "assets"));
        expect(assetsDir).toEqual(["foo.jpg"]);
        const scenarios = [
            {
                actual: vaultDir.length,
                expected: 7,
            },
            {
                actual: assetsDir,
                expected: ["foo.jpg"],
            },
        ];
        return scenarios;
    },
});
const SNAPSHOT_TEST_PRESETS = {
    EXPORT: {
        DEFAULTS: EXPORT_DEFAULTS,
    },
    IMPORT: {
        BASIC: IMPORT_BASIC,
    },
};
exports.default = SNAPSHOT_TEST_PRESETS;
//# sourceMappingURL=snapshot.js.map