"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const common_server_1 = require("@dendronhq/common-server");
const __1 = require("../..");
const noteUtils_1 = require("../../noteUtils");
const utils_1 = require("../../utils");
const utilsv2_1 = require("../../utilsv2");
const WILDCARD_LINK_V4 = new utilsv2_1.TestPresetEntryV4(async ({}) => {
    // TODO: this isn't done
    return [];
}, {
    genTestResults: async ({ extra }) => {
        const { body } = extra;
        const out = await utils_1.AssertUtils.assertInString({
            body,
            match: ["journal1", "journal2", "journal3"],
            nomatch: ["journal0"],
        });
        return [{ actual: out, expected: true }];
    },
    preSetupHook: async ({ wsRoot, vaults }) => {
        const vpath = common_server_1.vault2Path({ wsRoot, vault: vaults[0] });
        await __1.FileTestUtils.createFiles(vpath, [
            {
                path: "journal.2020.07.01.md",
                body: "journal0",
            },
            {
                path: "journal.2020.08.01.md",
                body: "journal1",
            },
            {
                path: "journal.2020.08.03.md",
                body: "journal3",
            },
            {
                path: "journal.2020.08.02.md",
                body: "journal2",
            },
        ]);
        const note = await noteUtils_1.NoteTestUtilsV4.createNote({
            vault: vaults[0],
            wsRoot,
            props: {
                id: "id.journal",
            },
            body: "((ref:[[journal.2020.08.*]]))",
            fname: "journal",
        });
        return { note };
    },
});
// @deprecate
const WILDCARD_LINK = new utils_1.TestPresetEntry({
    label: "wildcard link",
    before: async ({ vaults }) => {
        await __1.FileTestUtils.createFiles(vaults[0].fsPath, [
            {
                path: "journal.2020.07.01.md",
                body: "journal0",
            },
            {
                path: "journal.2020.08.01.md",
                body: "journal1",
            },
            {
                path: "journal.2020.08.03.md",
                body: "journal3",
            },
            {
                path: "journal.2020.08.02.md",
                body: "journal2",
            },
        ]);
        const note = await __1.NodeTestUtilsV2.createNote({
            vaultDir: vaults[0].fsPath,
            noteProps: {
                id: "id.journal",
                body: "((ref:[[journal.2020.08.*]]))",
                fname: "journal",
            },
        });
        return { note };
    },
    results: async ({ body }) => {
        const out = await utils_1.AssertUtils.assertInString({
            body,
            match: ["journal1", "journal2", "journal3"],
            nomatch: ["journal0"],
        });
        return [{ actual: out, expected: true }];
    },
});
const NOTE_REF_PRESET = {
    WILDCARD_LINK,
    WILDCARD_LINK_V4,
};
exports.default = NOTE_REF_PRESET;
//# sourceMappingURL=note-refs.js.map