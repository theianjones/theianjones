"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const common_all_1 = require("@dendronhq/common-all");
const fs_extra_1 = __importDefault(require("fs-extra"));
const lodash_1 = __importDefault(require("lodash"));
const path_1 = __importDefault(require("path"));
const filesv2_1 = require("../filesv2");
describe("schemaModuleProps2File", () => {
    let root;
    beforeEach(() => {
        root = filesv2_1.tmpDir().name;
    });
    it("root", async () => {
        const fname = "root";
        const sm = common_all_1.SchemaUtilsV2.createRootModuleProps(fname, { fsPath: root });
        await filesv2_1.schemaModuleProps2File(sm, root, fname);
        const payload = fs_extra_1.default.readFileSync(path_1.default.join(root, `${fname}.schema.yml`), {
            encoding: "utf8",
        });
        expect(payload).toMatchSnapshot();
    });
    it("non-root", async () => {
        const fname = "bond";
        const vault = { fsPath: root };
        const smp = common_all_1.SchemaUtilsV2.createModuleProps({ fname, vault });
        const rootNote = smp.schemas["bond"];
        const ch1 = common_all_1.SchemaUtilsV2.create({ id: "ch1", fname, vault });
        smp.schemas["ch1"] = ch1;
        common_all_1.DNodeUtilsV2.addChild(rootNote, ch1);
        await filesv2_1.schemaModuleProps2File(smp, root, fname);
        const payload = fs_extra_1.default.readFileSync(path_1.default.join(root, `${fname}.schema.yml`), {
            encoding: "utf8",
        });
        expect(payload).toMatchSnapshot();
    });
});
describe("file2Schema", () => {
    let root;
    beforeEach(() => {
        root = filesv2_1.tmpDir().name;
    });
    it("simple", async () => {
        const fpath = path_1.default.join(root, "sample.schema.yml");
        fs_extra_1.default.writeFileSync(fpath, `
version: 1
schemas:
- id: pro
  desc: projects
  parent: root
  namespace: true
  children:
    - quickstart
    - concepts
    - tips
    - faq
    - upgrading
    - topic
    - install
- id: quickstart
  desc: getting started with a project
- id: concepts
  desc: basic concepts to do with the project
- id: tips
- id: faq
- id: upgrading
- id: install
- id: topic
  desc: important areas of a project
  namespace: true
`, { encoding: "utf-8" });
        const schema = filesv2_1.file2Schema(fpath);
        expect(lodash_1.default.values(schema.schemas).length).toEqual(8);
    });
});
//# sourceMappingURL=filesv2.spec.js.map