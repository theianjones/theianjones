"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDurationMilliseconds = void 0;
const common_all_1 = require("@dendronhq/common-all");
const fs_extra_1 = __importDefault(require("fs-extra"));
const engineClient_1 = require("../engineClient");
function getDurationMilliseconds(start) {
    const [secs, nanosecs] = process.hrtime(start);
    return secs * 1000 + Math.floor(nanosecs / 1000000);
}
exports.getDurationMilliseconds = getDurationMilliseconds;
async function main() {
    let start = process.hrtime();
    const engine = engineClient_1.DendronEngineClient.create({
        port: "3005",
        ws: "/Users/kevinlin/Dropbox/Apps/Noah",
        vaults: ["/Users/kevinlin/Dropbox/Apps/Noah/notes"],
    });
    let engineCreate = getDurationMilliseconds(start);
    start = process.hrtime();
    await engine.init();
    let engineInit = getDurationMilliseconds(start);
    start = process.hrtime();
    await engine.queryNotes({ qs: "*" });
    let engineStarQuery = getDurationMilliseconds(start);
    start = process.hrtime();
    let resp = await engine.queryNotes({ qs: "pr" });
    let engineDomainQuery = getDurationMilliseconds(start);
    let nodes = resp.data;
    start = process.hrtime();
    resp = await engine.queryNotes({ qs: "cli.git" });
    let engineDomainWithChildQuery = getDurationMilliseconds(start);
    nodes = resp.data;
    const numProps = nodes.length;
    start = process.hrtime();
    await Promise.all(nodes.map(async (ent) => common_all_1.DNodeUtilsV2.enhancePropForQuickInput({
        props: ent,
        schemas: engine.schemas,
        vaults: engine.vaultsv3,
    })));
    let enhancePropsWithPromise = getDurationMilliseconds(start);
    start = process.hrtime();
    await Promise.all(nodes.slice(0, 100).map(async (ent) => common_all_1.DNodeUtilsV2.enhancePropForQuickInput({
        props: ent,
        schemas: engine.schemas,
        vaults: engine.vaultsv3,
    })));
    let enhancePropsWithPromise100 = getDurationMilliseconds(start);
    start = process.hrtime();
    await Promise.all(nodes.slice(0, 50).map(async (ent) => common_all_1.DNodeUtilsV2.enhancePropForQuickInput({
        props: ent,
        schemas: engine.schemas,
        vaults: engine.vaultsv3,
    })));
    let enhancePropsWithPromise50 = getDurationMilliseconds(start);
    start = process.hrtime();
    nodes.slice(0, 50).map((ent) => common_all_1.DNodeUtilsV2.enhancePropForQuickInput({
        props: ent,
        schemas: engine.schemas,
        vaults: engine.vaultsv3,
    }));
    let enhancePropsNoPromise50 = getDurationMilliseconds(start);
    const out = {
        engineCreate,
        engineInit,
        engineStarQuery,
        engineDomainQuery,
        engineDomainWithChildQuery,
        numProps,
        enhancePropsWithPromise,
        enhancePropsWithPromise100,
        enhancePropsWithPromise50,
        enhancePropsNoPromise50,
    };
    console.log(out);
    fs_extra_1.default.writeJSONSync("/tmp/data.json", out, { spaces: 4 });
    return;
}
main();
//# sourceMappingURL=fuse.js.map