"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const unified_1 = __importDefault(require("unified"));
const dendronLinksPlugin_1 = require("../dendronLinksPlugin");
const remark_parse_1 = __importDefault(require("remark-parse"));
function getProc(opts) {
    return unified_1.default()
        .use(remark_parse_1.default, { gfm: true })
        .use(dendronLinksPlugin_1.dendronLinksPlugin, opts);
}
describe("basic", () => {
    test("init", () => {
        const resp = getProc().parse(`[["foo.md"]]`);
        expect(resp).toMatchSnapshot();
        // @ts-ignore
        expect(resp.children[0].children[0].type).toEqual("wikiLink");
    });
    test("doesn't parse inline code block", () => {
        const resp = getProc().parse("`[[foo.md]]`");
        expect(resp).toMatchSnapshot("bond");
    });
    // test("relative anchor", () => {
    //   getProc({replaceLink}).parse(`[["foo#bar]]`)
    // })
});
//# sourceMappingURL=dendronLinksPlugin.spec.js.map