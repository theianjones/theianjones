"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.configureLogger = exports.getLogger = exports.setLogger = void 0;
const common_server_1 = require("@dendronhq/common-server");
const fs_extra_1 = __importDefault(require("fs-extra"));
let L;
function setLogger({ logPath }) {
    const logLevel = process.env.LOG_LEVEL || "debug";
    // @ts-ignore
    L = common_server_1.createLogger("dendron.server", logPath, { lvl: logLevel });
    L.info({ ctx: "setLogger", msg: "set" });
    return L;
}
exports.setLogger = setLogger;
function getLogger() {
    if (!L) {
        const logPath = process.env.LOG_DST || "stdout";
        L = configureLogger(logPath);
    }
    L.info({ ctx: "getLogger" });
    return L;
}
exports.getLogger = getLogger;
function configureLogger(logPath) {
    if (!logPath) {
        logPath = "stdout";
    }
    if (logPath !== "stdout") {
        if (fs_extra_1.default.existsSync(logPath)) {
            fs_extra_1.default.moveSync(logPath, `${logPath}.old`, { overwrite: true });
        }
        fs_extra_1.default.ensureFileSync(logPath);
    }
    return setLogger({ logPath });
}
exports.configureLogger = configureLogger;
//# sourceMappingURL=core.js.map