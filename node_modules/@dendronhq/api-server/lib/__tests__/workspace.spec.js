"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const common_server_1 = require("@dendronhq/common-server");
const common_test_utils_1 = require("@dendronhq/common-test-utils");
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
describe("main", () => {
    let wsRoot;
    let vaultString;
    beforeEach(async () => {
        wsRoot = common_server_1.tmpDir().name;
        vaultString = path_1.default.join(wsRoot, "vault");
        fs_extra_1.default.ensureDirSync(vaultString);
        await common_test_utils_1.EngineTestUtilsV2.setupVault({
            vaultDir: vaultString,
            initDirCb: (dirPath) => {
                common_test_utils_1.NodeTestUtilsV2.createNotes({
                    vaultPath: dirPath,
                    noteProps: [
                        {
                            id: "id.foo",
                            fname: "foo",
                            vault: { fsPath: dirPath },
                        },
                    ],
                });
            },
        });
    });
    test("one", async () => {
        const payload = {
            uri: wsRoot,
            config: {
                vaults: [vaultString],
            },
        };
        const api = new common_server_1.DendronAPI({
            endpoint: "http://localhost:3005",
            apiPath: "api",
        });
        // @ts-ignore
        let resp = await api.workspaceInit(payload);
        resp = await api.workspaceList();
        // TDOO
    });
});
//# sourceMappingURL=workspace.spec.js.map