"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = __importDefault(require("lodash"));
const common_test_utils_1 = require("@dendronhq/common-test-utils");
const engine_server_1 = require("@dendronhq/engine-server");
const createEngine = ({ wsRoot, vaults }) => {
    return engine_server_1.DendronEngineClient.create({
        port: "3005",
        ws: wsRoot,
        vaults: vaults.map((ent) => ent.fsPath),
    });
};
describe("engine, schemas/", () => {
    const nodeType = "SCHEMAS";
    common_test_utils_1.ENGINE_PRESETS.forEach((pre) => {
        const { name, presets } = pre;
        describe(name, () => {
            test.each(
            // @ts-ignore
            lodash_1.default.map(presets[nodeType], (v, k) => {
                return [k, v];
            }))("%p", async (_key, TestCase) => {
                const { testFunc, ...opts } = TestCase;
                await common_test_utils_1.runEngineTestV4(testFunc, { ...opts, createEngine, expect });
            });
        });
    });
});
describe("engine, notes/", () => {
    const nodeType = "NOTES";
    common_test_utils_1.ENGINE_PRESETS.forEach((pre) => {
        const { name, presets } = pre;
        describe(name, () => {
            test.each(lodash_1.default.map(presets[nodeType], (v, k) => {
                return [k, v];
            }))("%p", async (_key, TestCase) => {
                // @ts-ignore
                const { testFunc, ...opts } = TestCase;
                await common_test_utils_1.runEngineTestV4(testFunc, { ...opts, createEngine, expect });
            });
        });
    });
});
describe("engine, config/", () => {
    lodash_1.default.map(common_test_utils_1.ENGINE_CONFIG_PRESETS, (presets, name) => {
        describe(name, () => {
            test.each(lodash_1.default.map(presets, (v, k) => {
                return [k, v];
            }))("%p", async (_key, TestCase) => {
                // @ts-ignore
                const { testFunc, ...opts } = TestCase;
                await common_test_utils_1.runEngineTestV4(testFunc, { ...opts, createEngine, expect });
            });
        });
    });
});
//# sourceMappingURL=engine.spec.js.map