"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.workspaceRouter = void 0;
const common_all_1 = require("@dendronhq/common-all");
const express_1 = require("express");
const http_status_codes_1 = require("http-status-codes");
const lodash_1 = __importDefault(require("lodash"));
const workspace_1 = require("../modules/workspace");
const memoryStore_1 = require("../store/memoryStore");
const router = express_1.Router();
exports.workspaceRouter = router;
router.post("/initialize", async (req, res) => {
    const resp = await workspace_1.WorkspaceController.instance().init(req.body);
    res.json(resp);
});
router.get("/all", async (_req, res) => {
    const workspaces = await memoryStore_1.MemoryStore.instance().list("ws");
    const data = lodash_1.default.keys(workspaces);
    return res.status(http_status_codes_1.OK).json({ workspaces: data });
});
router.post("/sync", async (req, res) => {
    try {
        const resp = await workspace_1.WorkspaceController.instance().sync(req.body);
        res.json(resp);
    }
    catch (err) {
        res.json({
            error: new common_all_1.DendronError({
                msg: common_all_1.ENGINE_ERROR_CODES.ENGINE_NOT_SET,
                payload: err,
            }),
        });
    }
});
//# sourceMappingURL=workspace.js.map