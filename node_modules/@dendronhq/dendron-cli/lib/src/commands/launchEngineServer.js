"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LaunchEngineServerCommand = void 0;
const api_server_1 = require("@dendronhq/api-server");
const common_server_1 = require("@dendronhq/common-server");
const engine_server_1 = require("@dendronhq/engine-server");
const lodash_1 = __importDefault(require("lodash"));
const soil_1 = require("./soil");
class LaunchEngineServerCommand extends soil_1.SoilCommandV3 {
    static buildCmd(yargs) {
        const _cmd = new LaunchEngineServerCommand();
        return yargs.command("launchEngineServer", "port to launch from", _cmd.buildArgs, _cmd.eval);
    }
    buildArgs(args) {
        super.buildArgs(args);
        args.option("port", {
            describe: "port to launch server",
            type: "number",
        });
    }
    async enrichArgs(args) {
        let { wsRoot, port } = args;
        const cwd = process.cwd();
        wsRoot = common_server_1.resolvePath(wsRoot, cwd);
        const ws = new engine_server_1.WorkspaceService({ wsRoot });
        const vaults = ws.config.vaults;
        const vaultPaths = vaults.map((v) => common_server_1.resolvePath(v.fsPath, wsRoot));
        const _port = await api_server_1.launch({ port, logPath: process.env["LOG_DST"] });
        ws.writeMeta({ version: "dendron-cli" });
        ws.writePort(_port);
        const engine = engine_server_1.DendronEngineClient.create({
            port: _port,
            vaults: vaultPaths,
            ws: wsRoot,
        });
        return {
            ...args,
            engine,
            wsRoot,
            vaults: vaultPaths,
            port: _port,
        };
    }
    async execute(opts) {
        const { port } = opts;
        console.log(`engine runnig on port ${port}`);
        return {
            port: lodash_1.default.toInteger(port),
        };
    }
}
exports.LaunchEngineServerCommand = LaunchEngineServerCommand;
//# sourceMappingURL=launchEngineServer.js.map