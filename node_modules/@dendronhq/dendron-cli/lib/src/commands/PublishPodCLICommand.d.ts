import { PodClassEntryV4 } from "@dendronhq/pods-core";
import yargs from "yargs";
import { SoilCommandCLIOpts, SoilCommandOptsV2, SoilCommandV2 } from "./soil";
declare type CommandOutput = {};
declare type CommandOpts = SoilCommandOptsV2 & {
    podClass: PodClassEntryV4;
    config: any;
    noteByName: string;
};
declare type CommandCLIOpts = SoilCommandCLIOpts & {
    podId: string;
    podSource?: "remote" | "builtin";
    config?: string;
    noteByName: string;
};
export { CommandOpts as PublishPodCommandOpts };
export declare class PublishPodCLICommand extends SoilCommandV2<CommandCLIOpts, CommandOpts, CommandOutput> {
    buildArgs(args: yargs.Argv): void;
    enrichArgs(args: CommandCLIOpts): {
        noteByName: string;
        podClass: any;
        config: any;
        engine: Pick<import("@dendronhq/common-all").DEngineV2, "links" | "notes" | "schemas" | "wsRoot" | "configRoot" | "vaultsv3" | "vaults" | "updateNote" | "updateSchema" | "writeNote" | "writeSchema" | "init" | "deleteNote" | "deleteSchema" | "sync" | "getNoteByPath" | "getSchema" | "querySchema" | "queryNotes" | "queryNotesSync" | "renameNote" | "writeConfig" | "getConfig">;
        wsRoot: string;
        vault: string;
    };
    static buildCmd(yargs: yargs.Argv): yargs.Argv;
    execute(opts: CommandOpts): Promise<{}>;
}
