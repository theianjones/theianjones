import { DEngineClientV2 } from "@dendronhq/common-all";
import yargs from "yargs";
import { BaseCommand } from "./base";
declare type CommandOpts = {
    engineClient: DEngineClientV2;
    wsRoot: string;
};
declare type CommandOptsV2 = {
    engine: DEngineClientV2;
    wsRoot: string;
    vault: string;
};
export declare type CommandOptsV3 = {
    engine: DEngineClientV2;
    wsRoot: string;
};
declare type CommandCLIOpts = {
    wsRoot: string;
    vault: string;
};
declare type CommandCLIOptsV3 = {
    wsRoot: string;
};
export { CommandCLIOpts as SoilCommandCLIOpts };
export { CommandCLIOptsV3 as SoilCommandCLIOptsV3 };
export { CommandOpts as SoilCommandOpts };
export { CommandOptsV2 as SoilCommandOptsV2 };
export { CommandOptsV3 as SoilCommandOptsV3 };
export declare abstract class SoilCommand<TCLIOpts extends CommandCLIOpts = CommandCLIOpts, TCommandOpts extends CommandOpts = CommandOpts, TCommandOutput = void> extends BaseCommand<TCommandOpts, TCommandOutput> {
    buildArgs(args: yargs.Argv): void;
    abstract enrichArgs(args: TCLIOpts): TCommandOpts;
    eval: (args: TCLIOpts) => Promise<TCommandOutput>;
    _enrichArgs(args: TCLIOpts): CommandOpts;
}
export declare abstract class SoilCommandV2<TCLIOpts extends CommandCLIOpts = CommandCLIOpts, TCommandOpts extends CommandOptsV2 = CommandOptsV2, TCommandOutput = void> extends BaseCommand<TCommandOpts, TCommandOutput> {
    buildArgs(args: yargs.Argv): void;
    /**
     * Take CLI opts and transform them into command opts
     * @param args
     */
    abstract enrichArgs(args: TCLIOpts): TCommandOpts;
    eval: (args: TCLIOpts) => Promise<TCommandOutput>;
    _enrichArgs(args: TCLIOpts): CommandOptsV2;
}
export declare abstract class SoilCommandV3<TCLIOpts extends CommandCLIOptsV3 = CommandCLIOptsV3, TCommandOpts extends CommandOptsV3 = CommandOptsV3, TCommandOutput = void> extends BaseCommand<TCommandOpts, TCommandOutput> {
    buildArgs(args: yargs.Argv): void;
    /**
     * Take CLI opts and transform them into command opts
     * @param args
     */
    abstract enrichArgs(args: TCLIOpts): Promise<TCommandOpts>;
    eval: (args: TCLIOpts) => Promise<TCommandOutput>;
}
