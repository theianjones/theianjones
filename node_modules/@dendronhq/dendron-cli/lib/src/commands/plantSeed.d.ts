import yargs from "yargs";
import { SoilCommand, SoilCommandCLIOpts, SoilCommandOpts } from "./soil";
declare type CLIOpts = SoilCommandCLIOpts & {
    id: string;
};
declare type CommandOpts = SoilCommandOpts & {
    id: string;
    roots: string[];
};
export declare class PlantSeedCommand extends SoilCommand<CLIOpts, CommandOpts> {
    buildArgs(args: yargs.Argv): void;
    enrichArgs(args: CLIOpts): {
        roots: string[];
        id: string;
        engineClient: Pick<import("@dendronhq/common-all").DEngineV2, "links" | "notes" | "schemas" | "wsRoot" | "configRoot" | "vaultsv3" | "vaults" | "updateNote" | "updateSchema" | "writeNote" | "writeSchema" | "init" | "deleteNote" | "deleteSchema" | "sync" | "getNoteByPath" | "getSchema" | "querySchema" | "queryNotes" | "queryNotesSync" | "renameNote" | "writeConfig" | "getConfig">;
        wsRoot: string;
    };
    static buildCmd(yargs: yargs.Argv): yargs.Argv;
    execute(opts: CommandOpts): Promise<void>;
}
export {};
