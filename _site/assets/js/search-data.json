{"0": {
    "doc": "Stripe",
    "title": "Stripe",
    "hpath": "p.stripe",
    "content": " ",
    "url": "http://localhost:4000/notes/04b98cc0-7bd7-4b34-8877-c76ed2894caa.html",
    "relUrl": "/notes/04b98cc0-7bd7-4b34-8877-c76ed2894caa.html"
  },"1": {
    "doc": "Networking",
    "title": "Networking",
    "hpath": "p.rails.networking",
    "content": " ",
    "url": "http://localhost:4000/notes/0513aedb-19d2-46c1-9556-abcf48e9b761.html",
    "relUrl": "/notes/0513aedb-19d2-46c1-9556-abcf48e9b761.html"
  },"2": {
    "doc": "Terms",
    "title": "Terms",
    "hpath": "terms",
    "content": " ",
    "url": "http://localhost:4000/notes/08235910-ec3d-4db1-a455-19ad954fed99.html",
    "relUrl": "/notes/08235910-ec3d-4db1-a455-19ad954fed99.html"
  },"3": {
    "doc": "Partial",
    "title": "Partial",
    "hpath": "lang.clojure.func.partial",
    "content": "(def add-5 (partial + 5)) (add-5 10) ; 15 . ",
    "url": "http://localhost:4000/notes/25876a61-5dc8-4b6a-8ceb-d1897d6e530a.html",
    "relUrl": "/notes/25876a61-5dc8-4b6a-8ceb-d1897d6e530a.html"
  },"4": {
    "doc": "Badass-make-users-awesome",
    "title": "Badass: Making Users Awesome",
    "hpath": "book.badass-make-users-awesome",
    "content": "people.kathy-sierra . ",
    "url": "http://localhost:4000/notes/2dc1e2dd-2f34-456a-bb1b-33e282cbea3a.html#badass-making-users-awesome",
    "relUrl": "/notes/2dc1e2dd-2f34-456a-bb1b-33e282cbea3a.html#badass-making-users-awesome"
  },"5": {
    "doc": "Badass-make-users-awesome",
    "title": "Prologue",
    "hpath": "book.badass-make-users-awesome",
    "content": "why do these keep selling but those don‚Äôt? What attributes do the bestsellers have that their competitors don‚Äôt? . luck always plays a role. Our job it to shrink the role luck plays. What drives desirability? Quality? . Tolerance for problems is a function of desirability. Desirability can drive perceived quality. The more we love something, the more we reframe ‚Äúproblems‚Äù as ‚Äúnot-problems‚Äù. How can we build desirability without out-spending, out-friending, or out-trending the competition? . You do it through word of mouth recommendations. It doesn‚Äôt matter about how the user views us. It matters about how the user views themselves. They have to think that they are awesome because they gained something from your product. The key attributes of sustained success don‚Äôt live in the product. The key attributes live in the user. Instead of looking for common attributes across successful products, we must look for common attributes across successful users of those products. www.it-ebooks.info . Our products basks in the glow of our users‚Äô result with it. Users don‚Äôt evangelize to their friends because they like the product, they evangelize to their friends because they like their friends. | Imagine a tiny little utility tool ‚ÄúX‚Äù. | What does having X enable? | What can people now do because of X that they couldn‚Äôt do without it? | What can people now do better because of X? | What are people not doing now but could if they took advantage of all that X supports? | . Most products support a bigger, compelling, motivating context. The better you get at [x], the more detail you perceive in [x]. Dont just upgrade your product, upgrade your users. Sometimes badass users dont need to talk because the results are obvious. Word of Obvious (WOFO) is even better than Word of Mouth (WoM) . Its not about helping people feel badass. Its about helping them be badass. Dont make a better [x], make a better [user of x] . Dont make a better javascript tutorial, make a better javascript programmer. Continue to sell the context to your users after the purchase: . ",
    "url": "http://localhost:4000/notes/2dc1e2dd-2f34-456a-bb1b-33e282cbea3a.html#prologue",
    "relUrl": "/notes/2dc1e2dd-2f34-456a-bb1b-33e282cbea3a.html#prologue"
  },"6": {
    "doc": "Badass-make-users-awesome",
    "title": "Chapter 1 Think Badass",
    "hpath": "book.badass-make-users-awesome",
    "content": "‚ÄúPoint of view is worth 80 IQ points‚Äù people.alan-kay #quotes . To create sustained success, create high-resolution, badass users. ",
    "url": "http://localhost:4000/notes/2dc1e2dd-2f34-456a-bb1b-33e282cbea3a.html#chapter-1-think-badass",
    "relUrl": "/notes/2dc1e2dd-2f34-456a-bb1b-33e282cbea3a.html#chapter-1-think-badass"
  },"7": {
    "doc": "Badass-make-users-awesome",
    "title": "Badass-make-users-awesome",
    "hpath": "book.badass-make-users-awesome",
    "content": " ",
    "url": "http://localhost:4000/notes/2dc1e2dd-2f34-456a-bb1b-33e282cbea3a.html",
    "relUrl": "/notes/2dc1e2dd-2f34-456a-bb1b-33e282cbea3a.html"
  },"8": {
    "doc": "Func",
    "title": "Func",
    "hpath": "lang.clojure.func",
    "content": " ",
    "url": "http://localhost:4000/notes/2de363d3-7d29-4f84-9614-e9a305da35d9.html",
    "relUrl": "/notes/2de363d3-7d29-4f84-9614-e9a305da35d9.html"
  },"9": {
    "doc": "egghead",
    "title": "egghead",
    "hpath": "tag.egghead",
    "content": " ",
    "url": "http://localhost:4000/notes/3bacfbec-ae8e-435c-bf62-5f3a8a7d6ba7.html",
    "relUrl": "/notes/3bacfbec-ae8e-435c-bf62-5f3a8a7d6ba7.html"
  },"10": {
    "doc": 404,
    "title": "404",
    "hpath": null,
    "content": "Page not found . ",
    "url": "http://localhost:4000/404.html#404",
    "relUrl": "/404.html#404"
  },"11": {
    "doc": 404,
    "title": 404,
    "hpath": null,
    "content": " ",
    "url": "http://localhost:4000/404.html",
    "relUrl": "/404.html"
  },"12": {
    "doc": "Ruby",
    "title": "Ruby",
    "hpath": "lang.ruby",
    "content": " ",
    "url": "http://localhost:4000/notes/4cbbd8df-e3a7-4d0c-bed4-ae7059fefb47.html",
    "relUrl": "/notes/4cbbd8df-e3a7-4d0c-bed4-ae7059fefb47.html"
  },"13": {
    "doc": "Brew",
    "title": "Brew",
    "hpath": "p.brew",
    "content": " ",
    "url": "http://localhost:4000/notes/5ace5d58-7151-4832-bd03-4002d5d1fb5c.html",
    "relUrl": "/notes/5ace5d58-7151-4832-bd03-4002d5d1fb5c.html"
  },"14": {
    "doc": "Welcome",
    "title": "Welcome",
    "hpath": "welcome",
    "content": "Hey üëã . This is my digital garden. I use it to quickly reference my notes while I work each day. ",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  },"15": {
    "doc": "Reset",
    "title": "Reset",
    "hpath": "cli.git.reset",
    "content": "Reset branch to origin version: . git checkout mybranch git reset --hard origin/mybranch . ",
    "url": "http://localhost:4000/notes/6378827c-6928-4239-8101-d7187557c42a.html",
    "relUrl": "/notes/6378827c-6928-4239-8101-d7187557c42a.html"
  },"16": {
    "doc": "Quotes",
    "title": "Quotes",
    "hpath": "tag.quotes",
    "content": " ",
    "url": "http://localhost:4000/notes/6561da50-a899-49e6-96c2-1555ae87fe1d.html",
    "relUrl": "/notes/6561da50-a899-49e6-96c2-1555ae87fe1d.html"
  },"17": {
    "doc": "Products",
    "title": "Products",
    "hpath": "products",
    "content": " ",
    "url": "http://localhost:4000/notes/6eeb71d1-13d3-4955-8fca-97a15444ecb0.html",
    "relUrl": "/notes/6eeb71d1-13d3-4955-8fca-97a15444ecb0.html"
  },"18": {
    "doc": "Ahrefs",
    "title": "Ahrefs",
    "hpath": "products.saas.ahrefs",
    "content": "Too to analyze SEO. ",
    "url": "http://localhost:4000/notes/78d56386-0896-43ac-a894-24e1f4aecd97.html",
    "relUrl": "/notes/78d56386-0896-43ac-a894-24e1f4aecd97.html"
  },"19": {
    "doc": "Overton-window",
    "title": "Overton-window",
    "hpath": "terms.overton-window",
    "content": "The Overton window is the range of policies politically acceptable to the mainstream population at a given time. Named after people.joseph-p-overton . ",
    "url": "http://localhost:4000/notes/79ae17da-3214-4d85-83ca-1df9c6fb6ab5.html",
    "relUrl": "/notes/79ae17da-3214-4d85-83ca-1df9c6fb6ab5.html"
  },"20": {
    "doc": "Projects",
    "title": "Projects",
    "hpath": "p",
    "content": " ",
    "url": "http://localhost:4000/notes/7d3efa53-c72c-4277-972c-7424e29353c1.html",
    "relUrl": "/notes/7d3efa53-c72c-4277-972c-7424e29353c1.html"
  },"21": {
    "doc": "Slurp",
    "title": "Slurp",
    "hpath": "lang.clojure.func.slurp",
    "content": "(defn Example [] (def string1 (slurp \"Example.txt\")) (println string1)) . ",
    "url": "http://localhost:4000/notes/83e4d120-7d0b-4a4d-988c-d2deeb3581df.html",
    "relUrl": "/notes/83e4d120-7d0b-4a4d-988c-d2deeb3581df.html"
  },"22": {
    "doc": "Pull-request",
    "title": "Pull-request",
    "hpath": "tag.pull-request",
    "content": " ",
    "url": "http://localhost:4000/notes/8e8ff083-9d32-4530-a8da-ef001c1b03ad.html",
    "relUrl": "/notes/8e8ff083-9d32-4530-a8da-ef001c1b03ad.html"
  },"23": {
    "doc": "Saml",
    "title": "Saml",
    "hpath": "saml",
    "content": "wikipedia link . Security Assertion Markup Language (SAML, pronounced SAM-el) is an open standard for exchanging authentication and authorization data between parties, in particular, between an identity provider and a service provider. ",
    "url": "http://localhost:4000/notes/8f5b1732-07a8-4cfc-bc1a-ffd9c8d37f00.html",
    "relUrl": "/notes/8f5b1732-07a8-4cfc-bc1a-ffd9c8d37f00.html"
  },"24": {
    "doc": "Cli",
    "title": "Cli",
    "hpath": "cli",
    "content": " ",
    "url": "http://localhost:4000/notes/91cff2b3-1121-41f0-aefd-06a6d7e80111.html",
    "relUrl": "/notes/91cff2b3-1121-41f0-aefd-06a6d7e80111.html"
  },"25": {
    "doc": "1",
    "title": "Problem",
    "hpath": "aoc.2020.1",
    "content": "Before you leave, the Elves in accounting just need you to fix your expense report (your puzzle input); apparently, something isn‚Äôt quite adding up. Specifically, they need you to find the two entries that sum to 2020 and then multiply those two numbers together. For example, suppose your expense report contained the following: . 1721 979 366 299 675 1456 In this list, the two entries that sum to 2020 are 1721 and 299. Multiplying them together produces 1721 * 299 = 514579, so the correct answer is 514579. Of course, your expense report is much larger. Find the two entries that sum to 2020; what do you get if you multiply them together? . ",
    "url": "http://localhost:4000/notes/9558180f-ac4f-48ad-bdc8-8cc54aebf51e.html#problem",
    "relUrl": "/notes/9558180f-ac4f-48ad-bdc8-8cc54aebf51e.html#problem"
  },"26": {
    "doc": "1",
    "title": "Show your work",
    "hpath": "aoc.2020.1",
    "content": "(def input [1293 1207 1623 1675 1842 1410 85 1108 557 1217 1506 1956 1579 1614 1360 1544 1946 1666 1972 1814 1699 1778 1529 2002 1768 1173 1407 1201 1264 1739 1774 1951 1980 1428 1381 1714 884 1939 1295 1694 1168 1971 1352 1462 1828 1402 1433 1542 1144 1331 1427 1261 1663 1820 1570 1874 1486 1613 1769 1721 1753 1142 1677 2010 1640 1465 1171 534 1790 2005 1604 1891 1247 1281 1867 1403 2004 1668 1416 2001 1359 686 1965 1728 1551 1565 1128 1832 1757 1350 1808 1711 1799 1590 1989 1547 1140 1905 1368 1179 1902 1473 1908 1859 1257 1394 1244 1800 1695 1731 1474 1781 1885 1154 1990 1929 1193 1302 1831 1226 1418 1400 1435 1645 1655 1843 1227 1481 1754 1290 1685 1498 71 1286 1137 1288 1758 1987 1471 1839 1545 1682 1615 1475 1849 1985 1568 1795 1184 1863 1362 1271 1802 1944 1821 1880 1788 1733 1150 1314 1727 1434 1833 1312 1457 160 1629 1967 1505 1239 1266 1838 1687 1630 1591 1893 1450 1234 1755 1523 1533 1499 1865 1725 1444 1517 1167 1738 1519 1263 1901 1627 1644 1771 1812 1270 1497 1707 1708 1396]) (count input) (defn is-2020? [x y] (= (+ x y) 2020)) (is-2020? 2010 11) ; false (defn find-2020-with-value [input value] (reduce (fn [pairs current] (if (is-2020? value current) (conj pairs [value current]) pairs)) #{} input)) (find-2020-with-value input 10) ; [#{2010 10}] (defn find-any-pairs [col] (reduce #(find-2020-with-value col %) [] [1 2 3 4])) (def find-with-input (partial find-2020-with-value input)) (find-with-input 10) (defn transform-pairs [pairs] (map #(reduce * %) pairs)) (transform-pairs [#{1 2}]) (map transform-pairs (remove empty? (map #(find-with-input %) input))) ;; we could rewrite find-2020-with-value to be a reducer function instead of a map function . ",
    "url": "http://localhost:4000/notes/9558180f-ac4f-48ad-bdc8-8cc54aebf51e.html#show-your-work",
    "relUrl": "/notes/9558180f-ac4f-48ad-bdc8-8cc54aebf51e.html#show-your-work"
  },"27": {
    "doc": "1",
    "title": "1",
    "hpath": "aoc.2020.1",
    "content": "link . ",
    "url": "http://localhost:4000/notes/9558180f-ac4f-48ad-bdc8-8cc54aebf51e.html",
    "relUrl": "/notes/9558180f-ac4f-48ad-bdc8-8cc54aebf51e.html"
  },"28": {
    "doc": "2020",
    "title": "2020",
    "hpath": "aoc.2020",
    "content": " ",
    "url": "http://localhost:4000/notes/963a7a60-71e9-4775-a8e2-38a9e479e5d7.html",
    "relUrl": "/notes/963a7a60-71e9-4775-a8e2-38a9e479e5d7.html"
  },"29": {
    "doc": "Tag",
    "title": "Tag",
    "hpath": "tag",
    "content": " ",
    "url": "http://localhost:4000/notes/99d17837-f4e9-484f-a2d5-98f521a650dd.html",
    "relUrl": "/notes/99d17837-f4e9-484f-a2d5-98f521a650dd.html"
  },"30": {
    "doc": "Where",
    "title": "Where",
    "hpath": "p.rails.model.where",
    "content": "Greater/less than query . User.where(\"id &gt; ?\", 200) . ",
    "url": "http://localhost:4000/notes/a2fba9d2-7efa-4b1e-9d89-c03b0edb2b6d.html",
    "relUrl": "/notes/a2fba9d2-7efa-4b1e-9d89-c03b0edb2b6d.html"
  },"31": {
    "doc": "Subscription",
    "title": "Subscription",
    "hpath": "p.stripe.subscription",
    "content": "Docs Link . cancel_at_period_end will tell us if we should cancel at the end of the period. current_period_end is the attribute we can use to tell how long the customer should have an active subscription for. This attribute can be viewed with lang.ruby.time . ",
    "url": "http://localhost:4000/notes/a9ecd3e6-45b1-47b5-b65a-bc9691e8f0aa.html",
    "relUrl": "/notes/a9ecd3e6-45b1-47b5-b65a-bc9691e8f0aa.html"
  },"32": {
    "doc": "Open-ssl",
    "title": "Open SSL issue when installing a lang.ruby gem",
    "hpath": "p.open-ssl",
    "content": "I was getting this error: . ERROR: Loading command: install (LoadError) dlopen(/Users/ianjones/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin19/openssl.bundle, 9): Library not loaded: /usr/local/opt/openssl/lib/libssl.1.0.0.dylib . The fix was to: . brew upgrade rbenv ruby-build . p.brew suggested: . ruby-build installs a non-Homebrew OpenSSL for each Ruby version installed and these are never upgraded. To link Rubies to Homebrew's OpenSSL 1.1 (which is upgraded) add the following to your ~/.zshrc: export RUBY_CONFIGURE_OPTS=\"--with-openssl-dir=$(brew --prefix openssl@1.1)\" Note: this may interfere with building old versions of Ruby (e.g &lt;2.4) that use OpenSSL &lt;1.1. ",
    "url": "http://localhost:4000/notes/ab4dee95-803f-48c0-9eab-460bdab35be5.html#open-ssl-issue-when-installing-a-langruby-gem",
    "relUrl": "/notes/ab4dee95-803f-48c0-9eab-460bdab35be5.html#open-ssl-issue-when-installing-a-langruby-gem"
  },"33": {
    "doc": "Open-ssl",
    "title": "Open-ssl",
    "hpath": "p.open-ssl",
    "content": " ",
    "url": "http://localhost:4000/notes/ab4dee95-803f-48c0-9eab-460bdab35be5.html",
    "relUrl": "/notes/ab4dee95-803f-48c0-9eab-460bdab35be5.html"
  },"34": {
    "doc": "Model",
    "title": "Model",
    "hpath": "p.rails.model",
    "content": " ",
    "url": "http://localhost:4000/notes/ace0ddaf-d084-4e71-9882-e0ca229aceff.html",
    "relUrl": "/notes/ace0ddaf-d084-4e71-9882-e0ca229aceff.html"
  },"35": {
    "doc": "Interleave",
    "title": "Interleave",
    "hpath": "lang.clojure.func.interleave",
    "content": "Turn an array of keys and an array of values into a map: . (apply assoc {} (interleave [:fruit :color :temp] [\"grape\" \"red\" \"hot\"])) . ",
    "url": "http://localhost:4000/notes/aebace56-ddfb-4f76-828e-d1fdd3f514ca.html",
    "relUrl": "/notes/aebace56-ddfb-4f76-828e-d1fdd3f514ca.html"
  },"36": {
    "doc": "Server",
    "title": "Server",
    "hpath": "p.rails.networking.server",
    "content": "Run the rails server in production like this: . RAILS_ENV=production ./some/script . ",
    "url": "http://localhost:4000/notes/afe29c50-c9fb-45b2-8655-aa7382cc306f.html",
    "relUrl": "/notes/afe29c50-c9fb-45b2-8655-aa7382cc306f.html"
  },"37": {
    "doc": "Sessions",
    "title": "Sessions",
    "hpath": "p.rails.sessions",
    "content": " ",
    "url": "http://localhost:4000/notes/b7f16a40-7358-4673-9c17-842e2783b0dd.html",
    "relUrl": "/notes/b7f16a40-7358-4673-9c17-842e2783b0dd.html"
  },"38": {
    "doc": "Rails",
    "title": "Rails",
    "hpath": "p.rails",
    "content": " ",
    "url": "http://localhost:4000/notes/bd694a74-11ba-4f34-88fb-cbac53d9c36d.html",
    "relUrl": "/notes/bd694a74-11ba-4f34-88fb-cbac53d9c36d.html"
  },"39": {
    "doc": "Mailhog",
    "title": "Mailhog",
    "hpath": "p.mailhog",
    "content": "link . Locale mail service . ",
    "url": "http://localhost:4000/notes/c017b744-3322-4b74-90b3-8c82a0459026.html",
    "relUrl": "/notes/c017b744-3322-4b74-90b3-8c82a0459026.html"
  },"40": {
    "doc": "2",
    "title": "‚Äî Day 2: Password Philosophy ‚Äî",
    "hpath": "aoc.2020.2",
    "content": "Your flight departs in a few days from the coastal airport; the easiest way down to the coast from here is via toboggan. The shopkeeper at the North Pole Toboggan Rental Shop is having a bad day. ‚ÄúSomething‚Äôs wrong with our computers; we can‚Äôt log in!‚Äù You ask if you can take a look. Their password database seems to be a little corrupted: some of the passwords wouldn‚Äôt have been allowed by the Official Toboggan Corporate Policy that was in effect when they were chosen. To try to debug the problem, they have created a list (your puzzle input) of passwords (according to the corrupted database) and the corporate policy when that password was set. For example, suppose you have the following list: . 1-3 a: abcde 1-3 b: cdefg 2-9 c: ccccccccc Each line gives the password policy and then the password. The password policy indicates the lowest and highest number of times a given letter must appear for the password to be valid. For example, 1-3 a means that the password must contain a at least 1 time and at most 3 times. In the above example, 2 passwords are valid. The middle password, cdefg, is not; it contains no instances of b, but needs at least 1. The first and third passwords are valid: they contain one a or nine c, both within the limits of their respective policies. How many passwords are valid according to their policies? . ",
    "url": "http://localhost:4000/notes/c87e3da9-f54f-45f3-bcfc-41144b37b75a.html#-day-2-password-philosophy-",
    "relUrl": "/notes/c87e3da9-f54f-45f3-bcfc-41144b37b75a.html#-day-2-password-philosophy-"
  },"41": {
    "doc": "2",
    "title": "Show your work",
    "hpath": "aoc.2020.2",
    "content": "(def input (clojure.string/split (slurp \"aoc.2020.2.input.txt\") #\"\\n\")) (-&gt; input first (clojure.string/split ,,, #\" \") vec (interleave [:rule :char :pass] ,,,) vec ) (apply assoc {} (interleave [:rule :char :pass] [\"1\" \"2\" \"3\"])) (clojure.string/split (first input) #\" \") ;; =&gt; [\"1-14\" \"b:\" \"bbbbbbbbbbbbbbbbbbb\"] (defn parse-int [s] (Integer/parseInt (re-find #\"\\A-?\\d+\" s))) (defn transform-string [entry] (let [[rules key pass] (clojure.string/split entry #\" \") new-rules (map parse-int (clojure.string/split rules #\"-\")) new-key (str (first key))] [new-rules new-key pass])) (transform-string (first input)) (defn transform-input [current-input] (apply assoc {} (interleave [:rule :char :pass] (vec (transform-string current-input))))) (transform-input (first input)) ;; =&gt; {:rule (1 14), :char \"b\", :pass \"bbbbbbbbbbbbbbbbbbb\"} (map transform-input input) (def x {:rule '(1 14) :char \"b\" :pass \"bbbbbbbbbbbbbbbbbbb\"}) (count (vec (:pass x))) (defn count-pass [pass char] (reduce (fn [sum cur] (if (= (str cur) char) (inc sum) sum)) 0 (seq pass))) (char \"b\") (count-pass \"bbbbbb\" \"b\") (defn passes-rule [op number char pass] (op (count-pass pass char) number)) (passes-rule &gt; 5 \"b\" \"bbbbbbb\") (defn valid? [{:keys [rule char pass]}] (and (passes-rule &gt;= (first rule) char pass) (passes-rule &lt;= (last rule) char pass))) (valid? x) (passes-rule &gt; (first (:rule x)) (:char x) (:pass x)) (count (filter valid? (map transform-input input))) ; 548 . ",
    "url": "http://localhost:4000/notes/c87e3da9-f54f-45f3-bcfc-41144b37b75a.html#show-your-work",
    "relUrl": "/notes/c87e3da9-f54f-45f3-bcfc-41144b37b75a.html#show-your-work"
  },"42": {
    "doc": "2",
    "title": "2",
    "hpath": "aoc.2020.2",
    "content": "link . ",
    "url": "http://localhost:4000/notes/c87e3da9-f54f-45f3-bcfc-41144b37b75a.html",
    "relUrl": "/notes/c87e3da9-f54f-45f3-bcfc-41144b37b75a.html"
  },"43": {
    "doc": "Clojure",
    "title": "Clojure",
    "hpath": "lang.clojure",
    "content": " ",
    "url": "http://localhost:4000/notes/ccf25afb-a122-4920-acea-ade2cb22b572.html",
    "relUrl": "/notes/ccf25afb-a122-4920-acea-ade2cb22b572.html"
  },"44": {
    "doc": "Book",
    "title": "Book",
    "hpath": "book",
    "content": " ",
    "url": "http://localhost:4000/notes/d23c27bb-e61c-4fe1-8c55-f612121c1c0e.html",
    "relUrl": "/notes/d23c27bb-e61c-4fe1-8c55-f612121c1c0e.html"
  },"45": {
    "doc": "Checkout",
    "title": "Checkout",
    "hpath": "cli.git.checkout",
    "content": "This will reset the some/file/path file. git checkout origin some/file/path . ",
    "url": "http://localhost:4000/notes/d5240d38-e17e-4192-b62c-fc5e25e69b49.html",
    "relUrl": "/notes/d5240d38-e17e-4192-b62c-fc5e25e69b49.html"
  },"46": {
    "doc": "Saas",
    "title": "Saas",
    "hpath": "products.saas",
    "content": " ",
    "url": "http://localhost:4000/notes/da7262b9-88b5-411f-9041-14857aafc3d6.html",
    "relUrl": "/notes/da7262b9-88b5-411f-9041-14857aafc3d6.html"
  },"47": {
    "doc": "Subdomains",
    "title": "Subdomains",
    "hpath": "p.rails.networking.subdomains",
    "content": "How do I resolve a subdomain on my local machine? . Stack overflow link . You can use xip.io to alias subdomains your your local machine. ",
    "url": "http://localhost:4000/notes/e5bd9f6d-e909-4c8b-95e0-e83067c67a9b.html",
    "relUrl": "/notes/e5bd9f6d-e909-4c8b-95e0-e83067c67a9b.html"
  },"48": {
    "doc": "Git",
    "title": "Git",
    "hpath": "cli.git",
    "content": " ",
    "url": "http://localhost:4000/notes/ec16222c-a846-4722-8be3-dc41faf6ab22%202.html",
    "relUrl": "/notes/ec16222c-a846-4722-8be3-dc41faf6ab22%202.html"
  },"49": {
    "doc": "Git",
    "title": "Git",
    "hpath": "cli.git",
    "content": " ",
    "url": "http://localhost:4000/notes/ec16222c-a846-4722-8be3-dc41faf6ab22.html",
    "relUrl": "/notes/ec16222c-a846-4722-8be3-dc41faf6ab22.html"
  },"50": {
    "doc": "Time",
    "title": "Time",
    "hpath": "lang.ruby.time",
    "content": "Convert a timestamp to an actual time: . Time.at(1608463354) =&gt; 2020-12-20 11:22:34 +0000 . ",
    "url": "http://localhost:4000/notes/ed569868-899e-4dde-91a4-200692d4789d%203.html",
    "relUrl": "/notes/ed569868-899e-4dde-91a4-200692d4789d%203.html"
  },"51": {
    "doc": "Time",
    "title": "Time",
    "hpath": "lang.ruby.time",
    "content": "Convert a timestamp to an actual time: . Time.at(1608463354) =&gt; 2020-12-20 11:22:34 +0000 . ",
    "url": "http://localhost:4000/notes/ed569868-899e-4dde-91a4-200692d4789d.html",
    "relUrl": "/notes/ed569868-899e-4dde-91a4-200692d4789d.html"
  },"52": {
    "doc": "Lang",
    "title": "Lang",
    "hpath": "lang",
    "content": " ",
    "url": "http://localhost:4000/notes/ef5162eb-1f61-4878-a1c5-c9a776726629%203.html",
    "relUrl": "/notes/ef5162eb-1f61-4878-a1c5-c9a776726629%203.html"
  },"53": {
    "doc": "Lang",
    "title": "Lang",
    "hpath": "lang",
    "content": " ",
    "url": "http://localhost:4000/notes/ef5162eb-1f61-4878-a1c5-c9a776726629.html",
    "relUrl": "/notes/ef5162eb-1f61-4878-a1c5-c9a776726629.html"
  },"54": {
    "doc": "Conj",
    "title": "Conj",
    "hpath": "lang.clojure.func.conj",
    "content": "use conj to add to a set. (conj #{1 3 4} 2) ; #{1 2 3 4} order not guaranteed . ",
    "url": "http://localhost:4000/notes/f0c4ef87-265c-43c9-9f14-846bdf1cb0db%203.html",
    "relUrl": "/notes/f0c4ef87-265c-43c9-9f14-846bdf1cb0db%203.html"
  },"55": {
    "doc": "Conj",
    "title": "Conj",
    "hpath": "lang.clojure.func.conj",
    "content": "use conj to add to a set. (conj #{1 3 4} 2) ; #{1 2 3 4} order not guaranteed . ",
    "url": "http://localhost:4000/notes/f0c4ef87-265c-43c9-9f14-846bdf1cb0db.html",
    "relUrl": "/notes/f0c4ef87-265c-43c9-9f14-846bdf1cb0db.html"
  },"56": {
    "doc": "Gatsby",
    "title": "Gatsby",
    "hpath": "p.gatsby",
    "content": " ",
    "url": "http://localhost:4000/notes/f9c8a8de-3c16-41ca-bcd9-9a82cebe1d55%203.html",
    "relUrl": "/notes/f9c8a8de-3c16-41ca-bcd9-9a82cebe1d55%203.html"
  },"57": {
    "doc": "Gatsby",
    "title": "Gatsby",
    "hpath": "p.gatsby",
    "content": " ",
    "url": "http://localhost:4000/notes/f9c8a8de-3c16-41ca-bcd9-9a82cebe1d55.html",
    "relUrl": "/notes/f9c8a8de-3c16-41ca-bcd9-9a82cebe1d55.html"
  },"58": {
    "doc": "Advent of code",
    "title": "Advent of code",
    "hpath": "aoc",
    "content": " ",
    "url": "http://localhost:4000/notes/fec9e85e-5b85-480c-83e0-3501da87a5bc%203.html",
    "relUrl": "/notes/fec9e85e-5b85-480c-83e0-3501da87a5bc%203.html"
  },"59": {
    "doc": "Advent of code",
    "title": "Advent of code",
    "hpath": "aoc",
    "content": " ",
    "url": "http://localhost:4000/notes/fec9e85e-5b85-480c-83e0-3501da87a5bc.html",
    "relUrl": "/notes/fec9e85e-5b85-480c-83e0-3501da87a5bc.html"
  }
}
